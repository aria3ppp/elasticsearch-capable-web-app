input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"
        jdbc_user => "${POSTGRES_USER}"
        jdbc_password => "${POSTGRES_PASSWORD}"

        jdbc_driver_library => "/opt/logstash/vendor/jdbc/postgresql-42.4.2.jar"
        jdbc_driver_class => "org.postgresql.Driver"

        statement_filepath => "/usr/share/logstash/config/queries/sync-posts.sql"
        prepared_statement_bind_values => [":sql_last_value"]
        prepared_statement_name => "logstash_fetch_prepared_stmnt"
        use_prepared_statements => true

        use_column_value => true
        tracking_column => "contributed_at"
        tracking_column_type => "timestamp"
        last_run_metadata_path => "/usr/share/logstash/data/posts_sql_last_value"

        schedule => "*/5 * * * * *"
    }
}

filter {
    # set index action based on 'deleted' field
    if [deleted] {
        mutate { add_field => { "[@metadata][action]" => "delete" } }
    } else {
        mutate { add_field => { "[@metadata][action]" => "index" } }
    }
    # @metadata attributes are temporal to logstash pipelines and won't present to elasticsearch at output
        
    # remove 'deleted' field plus unneeded fields including ones that were added by logstash
    mutate {
        remove_field => ["contributed_at", "deleted", "@version", "@timestamp"]
    }
}

output {
    stdout { codec => rubydebug { metadata => true } }

    elasticsearch {
        hosts => ["${ELASTICSEARCH_URL}"]
        action => "%{[@metadata][action]}"
        index => "posts"
        document_id => "%{id}"
    }
}
